[{"E:\\docuclip\\ionic-frontend\\src\\index.tsx":"1","E:\\docuclip\\ionic-frontend\\src\\App.tsx":"2","E:\\docuclip\\ionic-frontend\\src\\Routes.tsx":"3","E:\\docuclip\\ionic-frontend\\src\\pages\\Toolbar.tsx":"4","E:\\docuclip\\ionic-frontend\\src\\pages\\CategoryRedirect.tsx":"5","E:\\docuclip\\ionic-frontend\\src\\pages\\view\\View.tsx":"6","E:\\docuclip\\ionic-frontend\\src\\pages\\view\\FilesListHandler.tsx":"7","E:\\docuclip\\ionic-frontend\\src\\pages\\upload\\Upload.tsx":"8","E:\\docuclip\\ionic-frontend\\src\\pages\\upload\\Intent.tsx":"9","E:\\docuclip\\ionic-frontend\\src\\pages\\auth\\Login.tsx":"10","E:\\docuclip\\ionic-frontend\\src\\pages\\auth\\Logout.tsx":"11","E:\\docuclip\\ionic-frontend\\src\\pages\\auth\\Register.tsx":"12","E:\\docuclip\\ionic-frontend\\src\\pages\\auth\\OtpVerify.tsx":"13","E:\\docuclip\\ionic-frontend\\src\\pages\\calendar\\Calendar.tsx":"14","E:\\docuclip\\ionic-frontend\\src\\pages\\qrScanner\\QrScanner.tsx":"15","E:\\docuclip\\ionic-frontend\\src\\pages\\visitingcard\\VisitingCard.tsx":"16","E:\\docuclip\\ionic-frontend\\src\\pages\\singleFile\\SingleFile.tsx":"17","E:\\docuclip\\ionic-frontend\\src\\components\\Menu.tsx":"18","E:\\docuclip\\ionic-frontend\\src\\components\\download\\Download.tsx":"19","E:\\docuclip\\ionic-frontend\\src\\pages\\user\\ChangeInfo.tsx":"20","E:\\docuclip\\ionic-frontend\\src\\pages\\user\\Profile.tsx":"21","E:\\docuclip\\ionic-frontend\\src\\components\\notifications\\Notifications.tsx":"22","E:\\docuclip\\ionic-frontend\\src\\components\\view\\SubCategoryHome.tsx":"23","E:\\docuclip\\ionic-frontend\\src\\components\\upload\\UploadSuccess.tsx":"24","E:\\docuclip\\ionic-frontend\\src\\components\\Tabs.tsx":"25","E:\\docuclip\\ionic-frontend\\src\\components\\view\\CategoryHome.tsx":"26","E:\\docuclip\\ionic-frontend\\src\\components\\upload\\UploadFile.tsx":"27","E:\\docuclip\\ionic-frontend\\src\\components\\view\\FilesList.tsx":"28","E:\\docuclip\\ionic-frontend\\src\\components\\upload\\SaveFileData.tsx":"29","E:\\docuclip\\ionic-frontend\\src\\components\\Routes.tsx":"30","E:\\docuclip\\ionic-frontend\\src\\pages\\visitingcard\\Inputs.tsx":"31","E:\\docuclip\\ionic-frontend\\src\\pages\\auth\\Logo.tsx":"32","E:\\docuclip\\ionic-frontend\\src\\pages\\user\\UserDetails.tsx":"33","E:\\docuclip\\ionic-frontend\\src\\components\\view\\CategoryItem.tsx":"34","E:\\docuclip\\ionic-frontend\\src\\components\\login\\TokenProvider.tsx":"35","E:\\docuclip\\ionic-frontend\\src\\components\\notifications\\NotificationEntry.tsx":"36","E:\\docuclip\\ionic-frontend\\src\\components\\download\\NoPerm.tsx":"37","E:\\docuclip\\ionic-frontend\\src\\components\\download\\LoginPerm.tsx":"38","E:\\docuclip\\ionic-frontend\\src\\components\\download\\Success.tsx":"39","E:\\docuclip\\ionic-frontend\\src\\pages\\visitingcard\\Preview.tsx":"40","E:\\docuclip\\ionic-frontend\\src\\components\\singleFile\\FileView.tsx":"41","E:\\docuclip\\ionic-frontend\\src\\components\\getSubcategoryName.tsx":"42","E:\\docuclip\\ionic-frontend\\src\\components\\calendar\\Event.tsx":"43","E:\\docuclip\\ionic-frontend\\src\\ExtensionMapping.ts":"44","E:\\docuclip\\ionic-frontend\\src\\components\\view\\Item.tsx":"45","E:\\docuclip\\ionic-frontend\\src\\components\\upload\\AdditionalFields.tsx":"46","E:\\docuclip\\ionic-frontend\\src\\components\\singleFile\\TagComponent.tsx":"47"},{"size":219,"mtime":1612799912102,"results":"48","hashOfConfig":"49"},{"size":6124,"mtime":1616856775107,"results":"50","hashOfConfig":"49"},{"size":6434,"mtime":1612799912018,"results":"51","hashOfConfig":"49"},{"size":1181,"mtime":1615980603298,"results":"52","hashOfConfig":"49"},{"size":423,"mtime":1612799912102,"results":"53","hashOfConfig":"49"},{"size":1001,"mtime":1612799912116,"results":"54","hashOfConfig":"49"},{"size":2365,"mtime":1615277521475,"results":"55","hashOfConfig":"49"},{"size":2363,"mtime":1615277460809,"results":"56","hashOfConfig":"49"},{"size":3959,"mtime":1612799912113,"results":"57","hashOfConfig":"49"},{"size":5147,"mtime":1612799912104,"results":"58","hashOfConfig":"49"},{"size":602,"mtime":1612799912105,"results":"59","hashOfConfig":"49"},{"size":8113,"mtime":1620982970955,"results":"60","hashOfConfig":"49"},{"size":5716,"mtime":1617080184731,"results":"61","hashOfConfig":"49"},{"size":10522,"mtime":1617080492751,"results":"62","hashOfConfig":"49"},{"size":2620,"mtime":1620982969463,"results":"63","hashOfConfig":"49"},{"size":1634,"mtime":1612799912117,"results":"64","hashOfConfig":"49"},{"size":5193,"mtime":1612799912112,"results":"65","hashOfConfig":"49"},{"size":2857,"mtime":1612799912087,"results":"66","hashOfConfig":"49"},{"size":4461,"mtime":1612799912089,"results":"67","hashOfConfig":"49"},{"size":6761,"mtime":1612799912114,"results":"68","hashOfConfig":"49"},{"size":1252,"mtime":1612799912114,"results":"69","hashOfConfig":"49"},{"size":4186,"mtime":1614841908197,"results":"70","hashOfConfig":"49"},{"size":6204,"mtime":1612799912101,"results":"71","hashOfConfig":"49"},{"size":525,"mtime":1612799912095,"results":"72","hashOfConfig":"49"},{"size":1892,"mtime":1612799912087,"results":"73","hashOfConfig":"49"},{"size":3030,"mtime":1613117825593,"results":"74","hashOfConfig":"49"},{"size":3009,"mtime":1612799912095,"results":"75","hashOfConfig":"49"},{"size":23333,"mtime":1615629681972,"results":"76","hashOfConfig":"49"},{"size":8778,"mtime":1612799912094,"results":"77","hashOfConfig":"49"},{"size":1821,"mtime":1620982973067,"results":"78","hashOfConfig":"49"},{"size":1982,"mtime":1612799912116,"results":"79","hashOfConfig":"49"},{"size":222,"mtime":1612799912105,"results":"80","hashOfConfig":"49"},{"size":1069,"mtime":1612799912115,"results":"81","hashOfConfig":"49"},{"size":967,"mtime":1612799912100,"results":"82","hashOfConfig":"49"},{"size":1631,"mtime":1612799912090,"results":"83","hashOfConfig":"49"},{"size":11299,"mtime":1615629422565,"results":"84","hashOfConfig":"49"},{"size":1156,"mtime":1612799912089,"results":"85","hashOfConfig":"49"},{"size":909,"mtime":1612799912089,"results":"86","hashOfConfig":"49"},{"size":9760,"mtime":1620982971959,"results":"87","hashOfConfig":"49"},{"size":2600,"mtime":1612799912117,"results":"88","hashOfConfig":"49"},{"size":23375,"mtime":1615629379080,"results":"89","hashOfConfig":"49"},{"size":2139,"mtime":1612799912090,"results":"90","hashOfConfig":"49"},{"size":1094,"mtime":1612799912088,"results":"91","hashOfConfig":"49"},{"size":1950,"mtime":1612799912018,"results":"92","hashOfConfig":"49"},{"size":18170,"mtime":1617080477661,"results":"93","hashOfConfig":"49"},{"size":7172,"mtime":1612799912094,"results":"94","hashOfConfig":"49"},{"size":305,"mtime":1612799912094,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"1nozj3h",{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"98"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"98"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"98"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"98"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"98"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\docuclip\\ionic-frontend\\src\\index.tsx",[],["196","197"],"E:\\docuclip\\ionic-frontend\\src\\App.tsx",["198"],"import React from \"react\"\r\n\r\nimport \"./globalStyle.css\"\r\n\r\n/* Core CSS required for Ionic components to work properly */\r\nimport \"@ionic/react/css/core.css\"\r\n\r\n/* Basic CSS for apps built with Ionic */\r\nimport \"@ionic/react/css/normalize.css\"\r\nimport \"@ionic/react/css/structure.css\"\r\nimport \"@ionic/react/css/typography.css\"\r\n\r\n/* Optional CSS utils that can be commented out */\r\nimport \"@ionic/react/css/padding.css\"\r\nimport \"@ionic/react/css/float-elements.css\"\r\nimport \"@ionic/react/css/text-alignment.css\"\r\nimport \"@ionic/react/css/text-transformation.css\"\r\nimport \"@ionic/react/css/flex-utils.css\"\r\nimport \"@ionic/react/css/display.css\"\r\n\r\n/* Theme variables */\r\nimport \"./theme/variables.css\"\r\n\r\n/* Code app imports */\r\nimport {\r\n  Filesystem,\r\n  Plugins,\r\n  PushNotification,\r\n  //PushNotificationToken,\r\n  PushNotificationActionPerformed,\r\n} from \"@capacitor/core\"\r\nimport Routes from \"./Routes\"\r\nimport { IonAlert } from \"@ionic/react\"\r\n\r\ntype states = {\r\n  shouldRedirect: boolean\r\n  test: string\r\n}\r\nclass App extends React.Component<{}, states> {\r\n  constructor(props: {}) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      shouldRedirect: false,\r\n      test: \"none\",\r\n    }\r\n\r\n    this.handleIntents = this.handleIntents.bind(this)\r\n\r\n    this.handlePermissions()\r\n    this.handleIntents()\r\n    //this.handlePushNotifications()\r\n  }\r\n\r\n  /**\r\n   * Handles intents received on cold starts + when app is running\r\n   */\r\n  handleIntents = () => {\r\n    // FIXME: for some reason I am forced to do this. Reason:\r\n    // 'this' implicitly has type 'any' because it does not have a type annotation.\r\n    /**\r\n     * Receives intent (file shared by another app) and processes it\r\n     * at file upload\r\n     *\r\n     * @param Intent Cordova Intent\r\n     */\r\n    const recieveIntent = (Intent: any) => {\r\n      if (Intent.clipItems) {\r\n        // set local storage item then redirect to a different page. Easiest way to make\r\n        // redirect work :(\r\n        localStorage.setItem(\"FILE\", JSON.stringify(Intent.clipItems[0]))\r\n\r\n        this.setState({ shouldRedirect: true })\r\n      }\r\n    }\r\n\r\n    document.addEventListener(\"deviceReady\", () => {\r\n      // since cordova plugins are used in a capacitor app, react doesn't know\r\n      // that the 'plugin' property exists. To stop react, or more specifically\r\n      // typescript from freaking out, I had to make TS just treat 'window' as a JS variable\r\n      let windowObj: any = window\r\n\r\n      if (windowObj.plugins && windowObj.plugins.intentShim) {\r\n        // responds to intents which launch the app themselves\r\n        windowObj.plugins.intentShim.getIntent(\r\n          (Intent: any) => {\r\n            if (sessionStorage.getItem(\"isCalledOnce\") !== \"true\") {\r\n              try {\r\n                recieveIntent(Intent)\r\n              } catch (error) {\r\n                console.log(\"Error handled: \", error)\r\n              }\r\n            }\r\n          },\r\n          () => {\r\n            console.log(\"Error getting launch intent\")\r\n          }\r\n        )\r\n\r\n        windowObj.plugins.intentShim.onIntent((Intent: any) => {\r\n          if (Intent.hasOwnProperty('extras') && Intent.extras.hasOwnProperty('LocalNotificationUserAction')) {\r\n            const options = JSON.parse(Intent.extras.LocalNotficationObject)\r\n            window.location.href = \"/file/\" + options.extra[1]\r\n          }\r\n          try {\r\n            recieveIntent(Intent)\r\n          } catch (error) {\r\n            console.log(\"Error handled: \", error)\r\n          }\r\n        })\r\n      }\r\n\r\n      window.addEventListener(\"onunload\", () => {\r\n        sessionStorage.setItem(\"isCalledOnce\", \"false\")\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Asks for file system permissions to save or read files\r\n   */\r\n  handlePermissions = () => {\r\n    // ask for permission to access filesystem\r\n    // Filesystem.requestPermissions()\r\n\r\n    //const { PushNotifications } = Plugins\r\n\r\n    // Request permission to use push notifications\r\n    // iOS will prompt user and return if they granted permission or not\r\n    // Android will just grant without prompting\r\n    // PushNotifications.requestPermission().then((result) => {\r\n    //   if (result.granted) {\r\n    //     // Register with Apple / Google to receive push via APNS/FCM\r\n    //     PushNotifications.register()\r\n    //   } else {\r\n    //     // Show some error\r\n    //   }\r\n    // })\r\n    // TODO: if permissions are denied, then contingency action must be taken\r\n  }\r\n\r\n  handlePushNotifications = () => {\r\n    const { PushNotifications } = Plugins\r\n\r\n    // On success, we should be able to receive notifications\r\n    PushNotifications.addListener(\"registrationError\", (error: any) => {\r\n      alert(\"Error on registration: \" + JSON.stringify(error))\r\n    })\r\n\r\n    PushNotifications.addListener(\r\n      \"pushNotificationReceived\",\r\n      (notification: PushNotification) => {\r\n        alert(\"Push received: \" + JSON.stringify(notification))\r\n      }\r\n    )\r\n\r\n    PushNotifications.addListener(\r\n      \"pushNotificationActionPerformed\",\r\n      (notification: PushNotificationActionPerformed) => {\r\n        alert(\"Push action performed: \" + JSON.stringify(notification))\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <IonAlert\r\n          isOpen={this.state.shouldRedirect}\r\n          message='Are you sure you want to upload the file?'\r\n          buttons={[\r\n            {\r\n              text: \"No\",\r\n              handler: () => {\r\n                localStorage.removeItem(\"FILE\")\r\n                this.setState({ shouldRedirect: false })\r\n                sessionStorage.setItem(\"isCalledOnce\", \"true\")\r\n              },\r\n            },\r\n            {\r\n              text: \"Yes\",\r\n              handler: () => {\r\n                this.setState({ shouldRedirect: false })\r\n                window.location.href = \"/upload_file\"\r\n                sessionStorage.setItem(\"isCalledOnce\", \"true\")\r\n              },\r\n            },\r\n          ]}\r\n          onDidDismiss={() => sessionStorage.setItem(\"isCalledOnce\", \"true\")}\r\n        />\r\n        <Routes />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","E:\\docuclip\\ionic-frontend\\src\\Routes.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\pages\\Toolbar.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\pages\\CategoryRedirect.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\pages\\view\\View.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\pages\\view\\FilesListHandler.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\pages\\upload\\Upload.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\pages\\upload\\Intent.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\pages\\auth\\Login.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\pages\\auth\\Logout.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\pages\\auth\\Register.tsx",["199","200","201","202","203","204","205"],"\r\nimport {\r\n\r\n  IonInput,\r\n  IonAlert,\r\n  IonRippleEffect,\r\n  IonLoading,\r\n} from \"@ionic/react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\n// import assets\r\nimport \"./Login.css\"\r\nimport Logo from \"./Logo\"\r\nimport backgroundImage from \"./background.png\"\r\n\r\n// axios and routes import\r\nimport axios from \"axios\"\r\nimport apiRoutes from \"../../components/Routes\"\r\n\r\n// import login modules\r\nimport { isLoggedIn } from \"../../components/login/TokenProvider\"\r\nimport React, { useState } from 'react';\r\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonCheckbox, IonList, IonItem, IonLabel, IonItemDivider } from '@ionic/react';\r\n\r\n\r\n\r\ntype Props = {}\r\ntype States = {\r\n  error: string\r\n  isLoading: boolean\r\n  loginRedirect: string\r\n\r\n  username: string\r\n  email: string\r\n  fullname: string\r\n  nickname: string\r\n  password: string\r\n  passwordRe: string\r\n  passwordScore: number\r\n  passwordReColor: \"primary\" | \"danger\"\r\n}\r\n\r\nclass Register extends React.Component<Props, States> {\r\n  constructor(props: Props) {\r\n    super(props)\r\n\r\n    // if user is already logged in, then redirect to home\r\n    if (isLoggedIn() === true) {\r\n      window.location.replace(\"/category\")\r\n    }\r\n\r\n    this.state = {\r\n      error: \"\",\r\n      isLoading: false,\r\n      loginRedirect: \"\",\r\n\r\n      username: \"\",\r\n      email: \"\",\r\n      fullname: \"\",\r\n      nickname: \"\",\r\n      password: \"admin\",\r\n      passwordRe: \"admin\",\r\n      passwordScore: 0,\r\n      passwordReColor: \"primary\"\r\n    }\r\n\r\n    this.registerClickHandler = this.registerClickHandler.bind(this)\r\n  }\r\n\r\n  registerClickHandler() {\r\n    this.setState({ isLoading: true })\r\n\r\n    // throw error if any of the fields are empty\r\n    if (!this.state.username || !this.state.email || !this.state.nickname || !this.state.fullname) {\r\n      this.setState({\r\n        error: \"All fields are required\",\r\n        isLoading: false,\r\n      })\r\n\r\n      return\r\n    }\r\n\r\n    // throw error if passwords don't match\r\n    if (this.state.password !== this.state.passwordRe) {\r\n      this.setState({\r\n        error: \"Passwords do not match\",\r\n        isLoading: false,\r\n      })\r\n\r\n      return\r\n    }\r\n\r\n    // disabling code because not using passwords anymore\r\n    // throw error is password is too weak\r\n    // if (this.state.passwordScore <= 2) {\r\n    //   this.setState({\r\n    //     error: \"Password is too weak\",\r\n    //     isLoading: false,\r\n    //   })\r\n\r\n    //   return\r\n    // }\r\n\r\n    // pack the data to be sent with api call and call the api\r\n    let credentialData = new FormData()\r\n    credentialData.append(\"username\", this.state.username)\r\n    credentialData.append(\"email\", this.state.email)\r\n    credentialData.append(\"fullname\", this.state.fullname)\r\n    credentialData.append(\"nickname\", this.state.nickname)\r\n    axios\r\n      .post(apiRoutes.register, credentialData)\r\n      .then((response) => {\r\n        if (response.data.status === \"success\") {\r\n          this.setState({ loginRedirect: \"User account created successfully!\" })\r\n        } else {\r\n          this.setState({ error: response.data.reason })\r\n        }\r\n      })\r\n      .then(() => {\r\n        this.setState({ isLoading: false })\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          isLoading: false,\r\n          error: \"Server unreachable\",\r\n        })\r\n        console.log(error)\r\n      })\r\n      .then(() => {\r\n        this.setState({ isLoading: false })\r\n      })\r\n  }\r\n\r\n  /*\r\n    Ion components hand value update differently to vanilla ReactJS\r\n    This piece of code updates the state on each input change\r\n  */\r\n  onChangeHandler = (event: any) => {\r\n    const name = event.target.name\r\n    const value = event.target.value\r\n\r\n    // special case to change password color\r\n    if ((name === \"passwordRe\" && this.state.password !== value) || (name === \"password\" && this.state.passwordRe !== value)) {\r\n      this.setState({ passwordReColor: \"danger\" })\r\n    } else {\r\n      this.setState({ passwordReColor: \"primary\" })\r\n    }\r\n\r\n    this.setState({ [name]: value } as any)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <IonAlert\r\n          isOpen={!!this.state.error}\r\n          message={this.state.error}\r\n          buttons={[\r\n            {\r\n              text: \"Okay\",\r\n              handler: () => {\r\n                this.setState({ error: \"\" })\r\n              },\r\n            },\r\n          ]}\r\n        />\r\n\r\n        <IonLoading\r\n          isOpen={this.state.isLoading}\r\n          onDidDismiss={() => this.setState({ isLoading: false })}\r\n          message={\"Please wait...\"}\r\n        />\r\n\r\n        <IonAlert\r\n          isOpen={!!this.state.loginRedirect}\r\n          message={this.state.loginRedirect}\r\n          buttons={[\r\n            {\r\n              text: \"Okay\",\r\n              handler: () => {\r\n                this.setState({ loginRedirect: \"\" })\r\n                window.location.replace(\"/\")\r\n              },\r\n            },\r\n          ]}\r\n        />\r\n\r\n        <IonContent>\r\n          <div className='main-container'>\r\n            <div className='row-vertical'>\r\n              <Logo />\r\n            </div>\r\n          </div>\r\n\r\n          <div className='row-vertical login-background-image'>\r\n            <img src={backgroundImage} alt='welcome' />\r\n          </div>\r\n\r\n          <div className='main-container'>\r\n            <div className='row-vertical login-main-panel'>\r\n              <div className='row-vertical login-title'>\r\n                <b>Create an account</b>\r\n              </div>\r\n\r\n              <IonItem className='input-form-group'>\r\n                <IonLabel position='floating'>Phone</IonLabel>\r\n                <IonInput\r\n                  type='text'\r\n                  name='username'\r\n                  value={this.state.username}\r\n                  onIonChange={this.onChangeHandler}\r\n                  size={10}\r\n                />\r\n              </IonItem>\r\n\r\n              <IonItem className='input-form-group'>\r\n                <IonLabel position='floating'>Email</IonLabel>\r\n                <IonInput\r\n                  type='text'\r\n                  name='email'\r\n                  value={this.state.email}\r\n                  onIonChange={this.onChangeHandler}\r\n                />\r\n              </IonItem>\r\n\r\n              <IonItem className='input-form-group'>\r\n                <IonLabel position='floating'>Full Name</IonLabel>\r\n                <IonInput\r\n                  type='text'\r\n                  name='fullname'\r\n                  value={this.state.fullname}\r\n                  onIonChange={this.onChangeHandler}\r\n                />\r\n              </IonItem>\r\n\r\n              <IonItem className='input-form-group'>\r\n                <IonLabel position='floating'>Nickname</IonLabel>\r\n                <IonInput\r\n                  type='text'\r\n                  name='nickname'\r\n                  value={this.state.nickname}\r\n                  onIonChange={this.onChangeHandler}\r\n                />\r\n              </IonItem>\r\n              <small style={{ position: 'relative', top: '-15px', left: '15px', marginBottom: '15px' }}>We will be addressing you by this name</small>\r\n              <div className='row-vertical text-center'>\r\n                <p>\r\n                <IonLabel> I Agree to</IonLabel>  <a href=\"https://docuclip.app/ci4-dms-updated/public/terms\">Terms and conditions</a>\r\n                <IonCheckbox color=\"dark\" ></IonCheckbox> \r\n                </p>\r\n              </div>\r\n              \r\n  \r\n  \r\n\r\n              <div className='row-vertical'>\r\n                <button\r\n                  className='center custom-button ripple-parent'\r\n                  onClick={this.registerClickHandler}\r\n                >\r\n                  <IonRippleEffect></IonRippleEffect>\r\n                  Signup\r\n                </button>\r\n              </div>\r\n              <div className='row-vertical text-center'>\r\n                <p>\r\n                  Already created? <Link to='login'>Login</Link>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </IonContent>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Register\r\n","E:\\docuclip\\ionic-frontend\\src\\pages\\auth\\OtpVerify.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\pages\\calendar\\Calendar.tsx",["206"],"import React from \"react\"\r\nimport { IonLoading, IonAlert } from \"@ionic/react\"\r\n\r\n// components\r\nimport Event from \"../../components/calendar/Event\"\r\n\r\n// react-big-calendar imports\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\"\r\nimport { Calendar as BigCalendar, momentLocalizer } from \"react-big-calendar\"\r\nimport moment from \"moment\"\r\n\r\n// context-menu imports\r\nimport { ContextMenu, MenuItem, connectMenu } from \"react-contextmenu\"\r\nimport \"./calendar.css\"\r\n\r\n// import network plugin\r\nimport {\r\n  Plugins,\r\n  FilesystemDirectory,\r\n  FilesystemEncoding,\r\n} from \"@capacitor/core\"\r\n// importing axios and its routes\r\nimport axios from \"axios\"\r\nimport apiRoutes from \"../../components/Routes\"\r\n\r\n// importing auth functions\r\nimport { isLoggedIn, getToken } from \"../../components/login/TokenProvider\"\r\nimport { downloadCategoryStructure, getSubcategoryName } from \"../../components/getSubcategoryName\"\r\n\r\n/*\r\n    This is a code snippet from official docs of react-contextmenu\r\n    https://github.com/vkbansal/react-contextmenu/blob/master/examples/DynamicMenu.js\r\n    No idea how this is supposed to work as connectMenu has either no documentation or\r\n    very difficult to find documentation available online.\r\n\r\n    From what I've been able to piece together, this is supposed to receive props from\r\n    connectMenu. This prop contains the id of ContextMenuTrigger, and trigger has\r\n    metadata of ContextMenuTrigger, which includes 'collect' call back function (which\r\n    sends back the event object with event related data like filename and publicName)\r\n    which a child object of trigger. This information can be used to dynamically create\r\n    a context menu.\r\n*/\r\nconst DynamicMenu = (props: any) => {\r\n  const { id, trigger } = props\r\n  return (\r\n    <ContextMenu id={id}>\r\n      {trigger && <MenuItem>{trigger.itemLabel}</MenuItem>}\r\n      {trigger && (\r\n        <MenuItem>\r\n          <b>{trigger.title}</b>\r\n        </MenuItem>\r\n      )}\r\n      <MenuItem divider />\r\n      {trigger && (\r\n        <MenuItem\r\n          data={{\r\n            publicName: trigger.resource.publicName,\r\n            redirect: \"fileinfo\",\r\n          }}\r\n          onClick={onClickEvent}\r\n        >\r\n          File Info\r\n        </MenuItem>\r\n      )}\r\n      {trigger && (\r\n        <MenuItem\r\n          data={{\r\n            publicName: trigger.resource.publicName,\r\n            redirect: \"filedownload\",\r\n          }}\r\n          onClick={onClickEvent}\r\n        >\r\n          Download Page\r\n        </MenuItem>\r\n      )}\r\n    </ContextMenu>\r\n  )\r\n}\r\nconst ConnectMenu = connectMenu(\"calendar-context\")(DynamicMenu)\r\n\r\n// context menu items can call this function to redirect user to either download page of\r\n// the file or view file page.\r\nconst onClickEvent = (e: any, data: any) => {\r\n  const { publicName, redirect } = data\r\n  if (redirect === \"filedownload\")\r\n    window.location.href = \"/download/\" + publicName\r\n  if (redirect === \"fileinfo\") window.location.href = \"/file/\" + publicName\r\n}\r\n\r\ntype SubCategoryResponse = {\r\n  categories: Array<string>\r\n  additionalFields: Object\r\n}\r\ntype FileListResponse = {\r\n  status: string\r\n  files: any\r\n  error?: string\r\n}\r\ntype props = {}\r\ntype states = {\r\n  calendar: null | JSX.Element\r\n  isLoading: boolean\r\n\r\n  contextMenu: any\r\n\r\n  error: string\r\n}\r\n\r\nclass Calendar extends React.Component<props, states> {\r\n  constructor(props: props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      calendar: null,\r\n      isLoading: true,\r\n\r\n      error: \"\",\r\n\r\n      // context menu\r\n      contextMenu: null,\r\n    }\r\n\r\n    // check to see if user is logged in\r\n    if (!isLoggedIn()) {\r\n      window.location.replace(\"/\")\r\n    }\r\n  }\r\n\r\n  dateClickHandler = (slotInfo: any) => {\r\n    const start: any = slotInfo.start\r\n\r\n    const dayArray = ['01', '02', '03', '04', '05', '06', '07', '08', '09']\r\n    let day: string\r\n    if (start.getDate() < 10 && start.getDate() > 0) {\r\n      day = dayArray[start.getDate() - 1]\r\n    } else\r\n      day = start.getDate()\r\n\r\n    const dateText = start.getFullYear() + '_' + start.getMonth() + '_' + day\r\n\r\n    window.location.href = 'date/' + dateText\r\n  }\r\n\r\n  async getCategoryStructure(): Promise<SubCategoryResponse> {\r\n    const { Network } = Plugins\r\n    let status = await Network.getStatus()\r\n\r\n    if (status.connected === false) {\r\n      const { Filesystem } = Plugins\r\n\r\n      let response = await Filesystem.readFile({\r\n        path: \"structure.txt\",\r\n        directory: FilesystemDirectory.Data,\r\n        encoding: FilesystemEncoding.UTF8,\r\n      }).catch((error) => {\r\n        console.log(error)\r\n        this.setState({ isLoading: false })\r\n        return { data: \"\" }\r\n      })\r\n\r\n      return JSON.parse(response.data)\r\n    } else {\r\n      const postResponse = await axios.post(apiRoutes.getCategories).then(\r\n        async (response) => {\r\n          const { Filesystem } = Plugins\r\n\r\n          try {\r\n            await Filesystem.writeFile({\r\n              path: \"structure.txt\",\r\n              data: JSON.stringify(response.data),\r\n              directory: FilesystemDirectory.Data,\r\n              encoding: FilesystemEncoding.UTF8,\r\n            })\r\n          } catch (e) {\r\n            console.error(\"Unable to write file\", e)\r\n          }\r\n\r\n          return response.data\r\n        }\r\n      )\r\n\r\n      return postResponse\r\n    }\r\n  }\r\n\r\n  async getFileList(): Promise<FileListResponse> {\r\n    const { Network } = Plugins\r\n    let status = await Network.getStatus()\r\n\r\n    if (status.connected === false) {\r\n      const { Filesystem } = Plugins\r\n\r\n      let response = await Filesystem.readFile({\r\n        path: getToken().userId + \"_list.txt\",\r\n        directory: FilesystemDirectory.Data,\r\n        encoding: FilesystemEncoding.UTF8,\r\n      }).catch((error) => {\r\n        console.log(error)\r\n        this.setState({ isLoading: false })\r\n\r\n        return { data: \"\" }\r\n      })\r\n\r\n      return JSON.parse(response.data)\r\n    } else {\r\n      const formData = new FormData()\r\n      formData.append(\"userId\", getToken().userId)\r\n      const postResponse = axios\r\n        .post(apiRoutes.listAll, formData)\r\n        .then(async (response) => {\r\n          const { Filesystem } = Plugins\r\n\r\n          try {\r\n            await Filesystem.writeFile({\r\n              path: getToken().userId + \"_list.txt\",\r\n              data: JSON.stringify(response.data),\r\n              directory: FilesystemDirectory.Data,\r\n              encoding: FilesystemEncoding.UTF8,\r\n            })\r\n          } catch (e) {\r\n            console.error(\"Unable to write file\", e)\r\n          }\r\n\r\n          return response.data\r\n        })\r\n\r\n      return postResponse\r\n    }\r\n  }\r\n\r\n  filterCategoryStructure(categoryStructure: SubCategoryResponse) {\r\n    let subCategories: any = {}\r\n    // retrieve the sub category\r\n    for (const firstProperty in categoryStructure.additionalFields) {\r\n      for (const secondProperty in categoryStructure.additionalFields[firstProperty][\r\n        \"subCategory\"\r\n      ]) {\r\n        if (secondProperty === \"category\") continue\r\n        subCategories[secondProperty] =\r\n          categoryStructure.additionalFields[firstProperty][\"subCategory\"][\r\n            secondProperty\r\n          ][\"title\"]\r\n      }\r\n    }\r\n\r\n    return subCategories\r\n  }\r\n\r\n  async componentDidMount() {\r\n    // download the category structure if possible\r\n    const categoryStructure = await this.getCategoryStructure()\r\n    const subCategories = this.filterCategoryStructure(categoryStructure)\r\n    console.log('subCategories: ', subCategories);\r\n    const filesList = await this.getFileList()\r\n    console.log('filesList: ', filesList);\r\n\r\n    // empty array which will contain all big-calendar events\r\n    const myEventsList: any = []\r\n\r\n    // for each file the current user has linked to their account,\r\n    // create a big-calendar event\r\n    await filesList.files.forEach(async (file: any) => {\r\n      // check to see if event exists\r\n      if (file.eventOn) {\r\n        // pack the data in big-calendar event object\r\n        let eventName = file.filename\r\n        if (file.metadata.category) {\r\n          eventName = file.metadata.category\r\n          if (file.metadata.additional_info.subCategory) {\r\n            eventName = getSubcategoryName(subCategories, file.metadata.category, file.metadata.additional_info.subCategory)\r\n          }\r\n        }\r\n\r\n        const tempObj: any = {\r\n          title: eventName,\r\n          start: Date.parse(file.eventOn),\r\n          end: Date.parse(file.eventOn),\r\n          allDay: true,\r\n          resource: {\r\n            publicName: file.publicName,\r\n            date: file.eventOn,\r\n          },\r\n        }\r\n\r\n        // append the event to all events list\r\n        myEventsList.push(tempObj)\r\n\r\n        if (file.eventEnd && file.metadata.category === \"Travel Bookings\") {\r\n          const tempObj: any = {\r\n            title: eventName,\r\n            start: Date.parse(file.eventEnd),\r\n            end: Date.parse(file.eventEnd),\r\n            allDay: true,\r\n            resource: {\r\n              publicName: file.publicName,\r\n              date: file.eventOn,\r\n            },\r\n          }\r\n\r\n          // append the event to all events list\r\n          myEventsList.push(tempObj)\r\n        }\r\n      }\r\n    })\r\n\r\n    // pass all these events to the calendar component and\r\n    // load the calendar on the page\r\n    const calendar = (\r\n      <BigCalendar\r\n        popup\r\n        localizer={momentLocalizer(moment)}\r\n        events={myEventsList}\r\n        views={[\"month\"]}\r\n        startAccessor='start'\r\n        endAccessor='end'\r\n        style={{ height: \"75vh\" }}\r\n        components={{ event: Event }}\r\n        selectable={true}\r\n        onSelectSlot={(slotInfo) => {\r\n          this.dateClickHandler(slotInfo)\r\n        }}\r\n        longPressThreshold={1}\r\n      />\r\n    )\r\n    this.setState({\r\n      calendar: calendar,\r\n      isLoading: false,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <IonLoading\r\n          isOpen={!!this.state.isLoading}\r\n          onDidDismiss={() => this.setState({ isLoading: false })}\r\n          message={\"Please wait...\"}\r\n        />\r\n\r\n        <IonAlert\r\n          isOpen={!!this.state.error}\r\n          message={this.state.error}\r\n          buttons={[\r\n            {\r\n              text: \"Okay\",\r\n              handler: () => {\r\n                this.setState({ error: \"\" })\r\n              },\r\n            },\r\n          ]}\r\n        />\r\n\r\n        {this.state.calendar}\r\n\r\n        <ConnectMenu />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Calendar\r\n","E:\\docuclip\\ionic-frontend\\src\\pages\\qrScanner\\QrScanner.tsx",["207"],"import React from 'react'\r\nimport QrReader from 'react-qr-reader'\r\n\r\n// import auth functions\r\nimport { isLoggedIn } from \"../../components/login/TokenProvider\";\r\n\r\nimport { IonAlert } from '@ionic/react';\r\nimport { Plugins } from \"@capacitor/core\";\r\nimport Axios from 'axios';\r\nimport apiRoutes from '../../components/Routes';\r\nconst { Camera } = Plugins;\r\n\r\n\r\ntype props = {}\r\ntype states = {\r\n  error: string,\r\n  delay: number,\r\n  style: object,\r\n}\r\n\r\nclass QrScanner extends React.Component<props, states> {\r\n  constructor(props: props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      error: '',\r\n      delay: 100,\r\n      style: { border: '0px' }\r\n    }\r\n\r\n    // redirect user to homepage if the user is not logged in\r\n    if (!isLoggedIn()) {\r\n      window.location.replace(\"/\");\r\n    }\r\n\r\n    // Camera.requestPermissions!()\r\n\r\n    this.handleScan = this.handleScan.bind(this)\r\n    this.handleError = this.handleError.bind(this)\r\n  }\r\n\r\n  handleScan(data: any){\r\n    // if data is not null, then execute the code\r\n    if (data) {\r\n      // dev\r\n      //var regex = /(http|https)(:\\/\\/)(localhost:3000)(\\/download\\/)/\r\n\r\n      // production\r\n      var regex = /(http|https)(:\\/\\/)(docuclip.app\\/ci4-dms-updated\\/public\\/download\\/)/\r\n      var result = regex.test(data)\r\n      if (result === true) {\r\n        data = data.replace(regex, \"\")\r\n        const formData = new FormData()\r\n        formData.append('publicName', data)\r\n        Axios.post(apiRoutes.statistics.scan, formData).catch((e) => console.log('could not count', e))\r\n        window.location.href = `/file/${data}`;\r\n      } else {\r\n        this.setState({ style: {border: '5px solid #ff7373'} })\r\n      }\r\n    } else {\r\n      this.setState({ style: {border: '0px'} })\r\n    }\r\n  }\r\n\r\n  handleError(err: any){\r\n    if (err === \"Error\") {\r\n      this.setState({\r\n        error: \"You device doesn't have a camera or has an inaccessible camera\",\r\n      })\r\n\r\n      window.location.replace(\"/category\")\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <IonAlert\r\n          isOpen={!!this.state.error}\r\n          message={this.state.error}\r\n          buttons={[{\r\n            text: 'Okay',\r\n            handler: () => {this.setState({error: ''})}\r\n          }]}\r\n        />\r\n\r\n        <div style={this.state.style}>\r\n          <QrReader\r\n            delay={300}\r\n            onError={this.handleError}\r\n            onScan={this.handleScan}\r\n            style={{ width: '100%', height: '100vh' }}\r\n            showViewFinder={true}\r\n          />\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default QrScanner;","E:\\docuclip\\ionic-frontend\\src\\pages\\visitingcard\\VisitingCard.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\pages\\singleFile\\SingleFile.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\components\\Menu.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\components\\download\\Download.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\pages\\user\\ChangeInfo.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\pages\\user\\Profile.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\components\\notifications\\Notifications.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\components\\view\\SubCategoryHome.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\components\\upload\\UploadSuccess.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\components\\Tabs.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\components\\view\\CategoryHome.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\components\\upload\\UploadFile.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\components\\view\\FilesList.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\components\\upload\\SaveFileData.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\components\\Routes.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\pages\\visitingcard\\Inputs.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\pages\\auth\\Logo.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\pages\\user\\UserDetails.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\components\\view\\CategoryItem.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\components\\login\\TokenProvider.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\components\\notifications\\NotificationEntry.tsx",["208","209"],"import React from \"react\"\r\n\r\nimport { IonAlert, IonButton, IonIcon, IonLoading } from \"@ionic/react\"\r\nimport { close } from \"ionicons/icons\"\r\n\r\nimport \"./notifications.css\"\r\nimport Axios from \"axios\"\r\nimport apiRoutes from \"../Routes\"\r\nimport { getToken } from \"../login/TokenProvider\"\r\nimport { FilesystemDirectory, Plugins } from \"@capacitor/core\"\r\nimport { FileOpener } from \"@ionic-native/file-opener\"\r\n\r\ntype props = {\r\n  id: string\r\n  action: string\r\n  text: string\r\n  public_name: string\r\n //subCategoryStructure: any\r\n}\r\ntype states = {\r\n  title: string\r\n  isRejectConfirmOpen: boolean\r\n  error: string\r\n  isLoading: boolean\r\n  info: string\r\n}\r\ninterface DownloadData {\r\n  status: string\r\n  data: string\r\n  filename: string\r\n  contentType: string\r\n}\r\n\r\nclass NotificationEntry extends React.Component<props, states> {\r\n  constructor(props: props) {\r\n    super(props)\r\n\r\n    const titleObj = {\r\n      ACCEPT_SHARE: \"File shared with you\",\r\n      SHARE_NOTIFY: \"File shared with you\",\r\n    }\r\n    let title: string = \"Unknown action\"\r\n\r\n    if (titleObj.hasOwnProperty(this.props.action))\r\n      title = titleObj[this.props.action]\r\n\r\n    this.state = {\r\n      title: title,\r\n      isRejectConfirmOpen: false,\r\n      error: \"\",\r\n      isLoading: false,\r\n      info: \"\",\r\n    }\r\n\r\n    localStorage.setItem(\"notificationID\", this.props.id)\r\n  }\r\n\r\n  componentDidMount() {\r\n    const formData = new FormData()\r\n    formData.append(\"publicName\", this.props.public_name)\r\n    Axios.post(apiRoutes.fileInfo, formData)\r\n      .then(async (response) => {\r\n        if (response.data.status === \"success\") {\r\n          const category = response.data.file.metadata.category\r\n          const subCategoryProperty =\r\n            response.data.file.metadata.additional_info?.subCategory\r\n\r\n      //    const subCategory = this.props.subCategoryStructure[subCategoryProperty]\r\n          this.setState({\r\n            //info: category + (subCategory ? \" - \" + subCategory : \"\"),\r\n          })\r\n        } else {\r\n          console.log(\"Verbose Error:\", response.data)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error: \", error)\r\n      })\r\n      .then(() => {\r\n        // hide loading icon\r\n        this.setState({ isLoading: false })\r\n      })\r\n  }\r\n\r\n  viewClickHandler = () => {\r\n    // if (this.props.action === \"ACCEPT_SHARE\") {\r\n    //   window.location.href = \"/file/\" + this.props.public_name\r\n    // }\r\n\r\n    this.setState({ isLoading: true })\r\n    const { Filesystem } = Plugins\r\n    const uniqueFilename = this.props.public_name\r\n    let contentType: string\r\n\r\n    Filesystem.readFile({\r\n      path: \"docuclip/\" + uniqueFilename,\r\n      directory: FilesystemDirectory.Data,\r\n    })\r\n      .catch(async () => {\r\n        // if readFile fails, then file doesn't exist, lets get on downloading it\r\n        const form = new FormData()\r\n        form.append(\"publicName\", this.props.public_name)\r\n        const response = await Axios.post(apiRoutes.fileInfo, form).then(\r\n          async (response) => {\r\n            if (response.data.status === \"success\") {\r\n              return response.data.file\r\n            } else if (response.data.status === \"fail\") {\r\n              this.setState({ error: response.data.error })\r\n            } else {\r\n              console.log(\"Verbose Error:\", response.data)\r\n              this.setState({ error: \"Unknown Error\" })\r\n            }\r\n          }\r\n        )\r\n\r\n        const formData = new FormData()\r\n        formData.append(\"filename\", response.filename)\r\n        formData.append(\"filePath\", response.filePath)\r\n        formData.append(\"ext\", response.metadata.ext)\r\n\r\n        await Axios.post(apiRoutes.fileDownload, formData)\r\n          .then((response) => {\r\n            if (response.data.status === \"success\") {\r\n              contentType = response.data.contentType\r\n              return response.data\r\n            } else {\r\n              console.log(\"Verbose error: \", response.data)\r\n              throw new Error(response.data.error)\r\n            }\r\n          })\r\n          .then((response: DownloadData) => {\r\n            // create directory\r\n            Filesystem.mkdir({\r\n              path: \"docuclip\",\r\n              directory: FilesystemDirectory.Data,\r\n            })\r\n              .catch(() => {}) // do nothing if directory exists error is thrown\r\n              .then(() => {\r\n                Filesystem.writeFile({\r\n                  path: \"docuclip/\" + uniqueFilename,\r\n                  data: response.data,\r\n                  directory: FilesystemDirectory.Data,\r\n                })\r\n                  .then((response) => {\r\n                    // good good\r\n                    // console.log('response: ', response);\r\n                  })\r\n                  .catch((error) => {\r\n                    console.log(\"Verbose error: \", error)\r\n                  })\r\n              })\r\n          })\r\n          .catch(async (error) => {\r\n            // throw this error if internet is not available\r\n            const { Network } = Plugins\r\n            let status = await Network.getStatus()\r\n\r\n            if (status.connected === false) {\r\n              this.setState({\r\n                error:\r\n                  \"Cannot connect to the internet. Unable to download file\",\r\n              })\r\n            }\r\n\r\n            // handle error file download + write errors\r\n            throw new Error(error)\r\n          })\r\n      })\r\n      .then(() => {\r\n        // file exists and is downloaded, now open the file\r\n        Filesystem.getUri({\r\n          directory: FilesystemDirectory.Data,\r\n          path: \"docuclip/\" + uniqueFilename,\r\n        }).then(\r\n          (getUriResult) => {\r\n            // now use 3rd party apps to open this apps\r\n            const path = getUriResult.uri\r\n            FileOpener.open(path, contentType)\r\n              .then(() => {\r\n                // Filesystem.deleteFile({\r\n                //   path: \"docuclip/\" + uniqueFilename,\r\n                //   directory: FilesystemDirectory.Data,\r\n                // })\r\n              })\r\n              .catch((error) => {\r\n                console.log(\"Verbose opening file error\", error)\r\n\r\n                // throw this error if app to open file is not found\r\n                if (error.status === 9) {\r\n                  this.setState({\r\n                    error:\r\n                      \"Cannot connect to the internet. Unable to download file\",\r\n                  })\r\n                }\r\n              })\r\n          },\r\n          (error) => {\r\n            console.log(\"Verbose filesystem get error\", error)\r\n          }\r\n        )\r\n      })\r\n      .catch((error) => {\r\n        // print the errors\r\n        console.log(\"Error\", error)\r\n      })\r\n      .then(() => {\r\n        this.setState({ isLoading: false })\r\n      })\r\n\r\n    // can make it dismiss by call dismissClickHandler()\r\n  }\r\n\r\n  dismissClickHandler = async () => {\r\n    const formData = new FormData()\r\n    formData.append(\"id\", this.props.id)\r\n    Axios.post(apiRoutes.notifications.dismiss, formData)\r\n      .then((response) => {\r\n        if (response.data.status === \"success\") {\r\n          const currentNotification = document.getElementById(this.props.id)\r\n          currentNotification?.setAttribute(\"class\", \"hidden\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error: \", error)\r\n      })\r\n  }\r\n\r\n  // NOT WORKING! REFER TO FileView.tsx -> acceptConfirmHandler\r\n  AcceptClickHandler = () => {\r\n    // make an api call to get QR code of the url of this download page\r\n    const formData = new FormData()\r\n    formData.append(\"publicName\", this.props.public_name)\r\n    formData.append(\"userId\", getToken().userId)\r\n    Axios.post(apiRoutes.savefile, formData)\r\n      .then(async (response) => {\r\n        console.log(response)\r\n        if (response.data.status === \"success\") {\r\n          await this.dismissClickHandler()\r\n          // handle success response here\r\n          const { LocalNotifications } = Plugins\r\n\r\n          LocalNotifications.requestPermission()\r\n            .then(() => {\r\n              LocalNotifications.schedule({\r\n                notifications: [\r\n                  {\r\n                    title: \"Docuclip file accepted\",\r\n                    body: this.state.title + \" has been saved in Docuclip\",\r\n                    id: 1,\r\n                  },\r\n                ],\r\n              })\r\n            })\r\n            .catch((error) => {\r\n              console.log(\r\n                \"No perms to display notifications. Falling back to dialog - error: \",\r\n                error\r\n              )\r\n              this.setState({\r\n                error: this.state.title + \" has been saved in Docuclip\",\r\n              })\r\n            })\r\n        } else {\r\n          this.setState({ error: response.data.error })\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ error: error })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <IonAlert\r\n          isOpen={this.state.isRejectConfirmOpen}\r\n          message={\"Are you sure you want to reject this file?\"}\r\n          buttons={[\r\n            {\r\n              text: \"Cancel\",\r\n              role: \"cancel\",\r\n              handler: () => {\r\n                this.setState({ isRejectConfirmOpen: false })\r\n              },\r\n            },\r\n            {\r\n              text: \"Yes\",\r\n              handler: () => {\r\n                this.dismissClickHandler()\r\n              },\r\n            },\r\n          ]}\r\n        />\r\n\r\n        <IonLoading\r\n          isOpen={!!this.state.isLoading}\r\n          onDidDismiss={() => this.setState({ isLoading: false })}\r\n          message={\"Please wait...\"}\r\n        />\r\n\r\n        <IonAlert\r\n          isOpen={!!this.state.error}\r\n          message={this.state.error}\r\n          buttons={[\r\n            {\r\n              text: \"Ok\",\r\n              handler: () => {\r\n                this.setState({ error: \"\" })\r\n              },\r\n            },\r\n          ]}\r\n        />\r\n\r\n        <div id={this.props.id} className='notification-entry'>\r\n          <div className='header'>\r\n            <h6 className='title'>{this.state.title}</h6>\r\n            {this.props.action === \"SHARE_NOTIFY\" ? (\r\n              <div className='dismiss-button'>\r\n                <IonIcon\r\n                  icon={close}\r\n                  onClick={this.dismissClickHandler}\r\n                  className='dismiss-button-btn'\r\n                />\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <div className='body'>\r\n            <p>{this.props.text}</p>\r\n            <p>{this.state.info}</p>\r\n            {this.props.action === \"SHARE_ACCEPT\" ? (\r\n              <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n                <IonButton onClick={this.viewClickHandler} color='medium'>\r\n                  View\r\n                </IonButton>\r\n                <IonButton\r\n                  onClick={() => this.setState({ isRejectConfirmOpen: true })}\r\n                  color='danger'\r\n                >\r\n                  Reject\r\n                </IonButton>\r\n                <IonButton onClick={this.AcceptClickHandler}>Accept</IonButton>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NotificationEntry\r\n","E:\\docuclip\\ionic-frontend\\src\\components\\download\\NoPerm.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\components\\download\\LoginPerm.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\components\\download\\Success.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\pages\\visitingcard\\Preview.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\components\\singleFile\\FileView.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\components\\getSubcategoryName.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\components\\calendar\\Event.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\ExtensionMapping.ts",[],"E:\\docuclip\\ionic-frontend\\src\\components\\view\\Item.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\components\\upload\\AdditionalFields.tsx",[],"E:\\docuclip\\ionic-frontend\\src\\components\\singleFile\\TagComponent.tsx",[],{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":26,"column":3,"nodeType":"216","messageId":"217","endLine":26,"endColumn":13},{"ruleId":"214","severity":1,"message":"218","line":22,"column":17,"nodeType":"216","messageId":"217","endLine":22,"endColumn":25},{"ruleId":"214","severity":1,"message":"219","line":23,"column":22,"nodeType":"216","messageId":"217","endLine":23,"endColumn":31},{"ruleId":"214","severity":1,"message":"220","line":23,"column":33,"nodeType":"216","messageId":"217","endLine":23,"endColumn":40},{"ruleId":"214","severity":1,"message":"221","line":23,"column":42,"nodeType":"216","messageId":"217","endLine":23,"endColumn":50},{"ruleId":"214","severity":1,"message":"222","line":23,"column":52,"nodeType":"216","messageId":"217","endLine":23,"endColumn":62},{"ruleId":"214","severity":1,"message":"223","line":23,"column":77,"nodeType":"216","messageId":"217","endLine":23,"endColumn":84},{"ruleId":"214","severity":1,"message":"224","line":23,"column":105,"nodeType":"216","messageId":"217","endLine":23,"endColumn":119},{"ruleId":"214","severity":1,"message":"225","line":28,"column":10,"nodeType":"216","messageId":"217","endLine":28,"endColumn":35},{"ruleId":"214","severity":1,"message":"226","line":11,"column":9,"nodeType":"216","messageId":"217","endLine":11,"endColumn":15},{"ruleId":"214","severity":1,"message":"227","line":64,"column":17,"nodeType":"216","messageId":"217","endLine":64,"endColumn":25},{"ruleId":"214","severity":1,"message":"228","line":65,"column":17,"nodeType":"216","messageId":"217","endLine":65,"endColumn":36},"no-native-reassign",["229"],"no-negated-in-lhs",["230"],"@typescript-eslint/no-unused-vars","'Filesystem' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'IonHeader' is defined but never used.","'IonPage' is defined but never used.","'IonTitle' is defined but never used.","'IonToolbar' is defined but never used.","'IonList' is defined but never used.","'IonItemDivider' is defined but never used.","'downloadCategoryStructure' is defined but never used.","'Camera' is assigned a value but never used.","'category' is assigned a value but never used.","'subCategoryProperty' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]