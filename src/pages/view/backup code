<div className="searchbar">
    <IonSearchbar value={searchText} onIonChange={e => onSearchInput(e)}></IonSearchbar>
</div>

<IonList className="content">
    {isEmpty === true || filesList === null ? "No results found" : filesList}
</IonList>

const onSearchInput = (event: any) => {
        setSearchText(event.detail.value!)

        if (isLoading === true) {
            return
        }

        const latestSearchText = event.detail.value!
        setFilesList(null)

        const items: any = []
        if (latestSearchText === '') {
            for (const [index, value] of files.entries()) {
                items.push(
                    <IonItem key={index + Date.now() * Math.random()}>
                        <Item
                            fileName={value.filename}
                            fileSize={value.metadata.size}
                            uplaodedAt={value.uploaded}
                            publicName={value.publicName}
                        />
                    </IonItem>
                )
            }
        } else {
            let index = 0
            for ( let file of files ) {
                // filename: "steam_latest.deb"
                // isPrivate: false
                // metadata:
                // category: "Others"
                // ext: "deb"
                // size: 2985852
                // tags: null
                // __proto__: Object
                // publicName: "ac63a361d8cdd2dbf93d3d71816f4c9e"
                // shareEmails: Array(1)
                // 0: ""
                // length: 1
                // __proto__: Array(0)
                // uploaded: "September 24, 2020 02:06"

                const itemPush = (index: number) => {
                    items.push(
                        <IonItem key={index}>
                            <Item
                                fileName={file.filename}
                                fileSize={file.metadata.size}
                                uplaodedAt={file.uploaded}
                                publicName={file.publicName}
                            />
                        </IonItem>
                    )
                }

                try {
                    if (file.filename.toLowerCase().search(latestSearchText.toLowerCase()) !== -1) {
                        itemPush(index + Date.now() * Math.random())
                        continue
                    }

                    if (file.metadata.ext.toLowerCase().search(latestSearchText.toLowerCase()) !== -1) {
                        itemPush(index + Date.now() * Math.random())
                        continue
                    }

                    if (file.metadata.category.toLowerCase().search(latestSearchText.toLowerCase()) !== -1) {
                        itemPush(index + Date.now() * Math.random())
                        continue
                    }

                    if (file.uploaded.toLowerCase().search(latestSearchText.toLowerCase()) !== -1) {
                        itemPush(index + Date.now() * Math.random())
                        continue
                    }

                    //TODO: add search for tags as well
                } catch {
                    //FIXME: add error handling here
                }

                index += 1
            }
        }

        setFilesList(items)
    }